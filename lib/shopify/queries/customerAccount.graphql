query CustomerAccountOverview(
  $customerAccessToken: String!
  $ordersFirst: Int = 5
  $orderLineItemsFirst: Int = 4
  $addressesFirst: Int = 6
) {
  customer(customerAccessToken: $customerAccessToken) {
    id
    firstName
    lastName
    displayName
    email
    phone
    createdAt
    defaultAddress {
      id
      firstName
      lastName
      address1
      address2
      city
      province
      zip
      country
      phone
      formatted
    }
    addresses(first: $addressesFirst) {
      nodes {
        id
        firstName
        lastName
        address1
        address2
        city
        province
        zip
        country
        phone
        formatted
      }
    }
    orders(first: $ordersFirst, reverse: true) {
      edges {
        cursor
        node {
          id
          name
          orderNumber
          processedAt
          fulfillmentStatus
          financialStatus
          statusUrl
          currentTotalPrice {
            amount
            currencyCode
          }
          lineItems(first: $orderLineItemsFirst) {
            nodes {
              id
              quantity
              title
              variant {
                id
                image {
                  url
                  altText
                }
              }
            }
          }
        }
      }
      pageInfo {
        hasNextPage
        endCursor
      }
    }
  }
  shop {
    customerAccountUrl
  }
}

query CustomerOrders(
  $customerAccessToken: String!
  $first: Int!
  $after: String
  $lineItemsFirst: Int = 4
) {
  customer(customerAccessToken: $customerAccessToken) {
    orders(first: $first, after: $after, reverse: true) {
      edges {
        cursor
        node {
          id
          name
          orderNumber
          processedAt
          fulfillmentStatus
          financialStatus
          statusUrl
          currentTotalPrice {
            amount
            currencyCode
          }
          lineItems(first: $lineItemsFirst) {
            nodes {
              id
              quantity
              title
              variant {
                id
                image {
                  url
                  altText
                }
              }
            }
          }
        }
      }
      pageInfo {
        hasNextPage
        endCursor
      }
    }
  }
}

query CustomerAddresses(
  $customerAccessToken: String!
  $first: Int!
  $after: String
) {
  customer(customerAccessToken: $customerAccessToken) {
    id
    defaultAddress {
      id
      firstName
      lastName
      address1
      address2
      city
      province
      zip
      country
      phone
      formatted
    }
    addresses(first: $first, after: $after) {
      edges {
        cursor
        node {
          id
          firstName
          lastName
          address1
          address2
          city
          province
          zip
          country
          phone
          formatted
        }
      }
      pageInfo {
        hasNextPage
        endCursor
      }
    }
  }
}

mutation CustomerUpdateProfile($customerAccessToken: String!, $customer: CustomerUpdateInput!) {
  customerUpdate(customerAccessToken: $customerAccessToken, customer: $customer) {
    customer {
      id
      firstName
      lastName
      displayName
      email
      phone
    }
    customerUserErrors {
      code
      field
      message
    }
  }
}

mutation CustomerAddressCreate($customerAccessToken: String!, $address: MailingAddressInput!) {
  customerAddressCreate(customerAccessToken: $customerAccessToken, address: $address) {
    customerAddress {
      id
    }
    customerUserErrors {
      code
      field
      message
    }
  }
}

mutation CustomerAddressUpdate(
  $customerAccessToken: String!
  $id: ID!
  $address: MailingAddressInput!
) {
  customerAddressUpdate(customerAccessToken: $customerAccessToken, id: $id, address: $address) {
    customerAddress {
      id
    }
    customerUserErrors {
      code
      field
      message
    }
  }
}

mutation CustomerAddressDelete($customerAccessToken: String!, $id: ID!) {
  customerAddressDelete(customerAccessToken: $customerAccessToken, id: $id) {
    deletedCustomerAddressId
    customerUserErrors {
      code
      field
      message
    }
  }
}

mutation CustomerDefaultAddressUpdate($customerAccessToken: String!, $addressId: ID!) {
  customerDefaultAddressUpdate(customerAccessToken: $customerAccessToken, addressId: $addressId) {
    customer {
      id
      defaultAddress {
        id
      }
    }
    customerUserErrors {
      code
      field
      message
    }
  }
}
