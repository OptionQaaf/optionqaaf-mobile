# Customer Account API operations

fragment CustomerAccountAddress on MailingAddress {
  id
  firstName
  lastName
  address1
  address2
  city
  province
  provinceCode
  country
  countryCode
  zip
  phone
  isDefault
}

fragment CustomerAccountOrder on Order {
  id
  name
  orderNumber
  processedAt
  fulfillmentStatus
  currentTotalPriceSet {
    presentmentMoney {
      amount
      currencyCode
    }
  }
  lineItems(first: 10) {
    nodes {
      title
      quantity
    }
  }
}

query CustomerAccountOverview(
  $addressesFirst: Int = 10
  $addressesAfter: String
  $ordersFirst: Int = 20
  $ordersAfter: String
) {
  customer {
    id
    displayName
    firstName
    lastName
    emailAddress {
      emailAddress
    }
    phone
    addresses(first: $addressesFirst, after: $addressesAfter) {
      pageInfo {
        hasNextPage
        endCursor
      }
      nodes {
        ...CustomerAccountAddress
      }
    }
    orders(first: $ordersFirst, after: $ordersAfter) {
      pageInfo {
        hasNextPage
        endCursor
      }
      nodes {
        ...CustomerAccountOrder
      }
    }
  }
}

query CustomerAccountOrders($first: Int!, $after: String) {
  customer {
    orders(first: $first, after: $after) {
      pageInfo {
        hasNextPage
        endCursor
      }
      nodes {
        ...CustomerAccountOrder
      }
    }
  }
}

query CustomerAccountAddresses($first: Int = 20, $after: String) {
  customer {
    id
    addresses(first: $first, after: $after) {
      pageInfo {
        hasNextPage
        endCursor
      }
      nodes {
        ...CustomerAccountAddress
      }
    }
  }
}

mutation CustomerAccountUpdate($input: CustomerUpdateInput!) {
  customerUpdate(input: $input) {
    customer {
      id
      displayName
      firstName
      lastName
      emailAddress {
        emailAddress
      }
      phone
    }
    userErrors {
      field
      message
    }
  }
}

mutation CustomerAccountAddressCreate($input: CustomerAddressInput!) {
  customerAddressCreate(input: $input) {
    customerAddress {
      ...CustomerAccountAddress
    }
    userErrors {
      field
      message
    }
  }
}

mutation CustomerAccountAddressUpdate($id: ID!, $input: CustomerAddressInput!) {
  customerAddressUpdate(id: $id, input: $input) {
    customerAddress {
      ...CustomerAccountAddress
    }
    userErrors {
      field
      message
    }
  }
}

mutation CustomerAccountAddressDelete($id: ID!) {
  customerAddressDelete(id: $id) {
    deletedCustomerAddressId
    userErrors {
      field
      message
    }
  }
}

mutation CustomerAccountAddressSetDefault($id: ID!) {
  customerDefaultAddressUpdate(addressId: $id) {
    customer {
      defaultAddress {
        ...CustomerAccountAddress
      }
    }
    userErrors {
      field
      message
    }
  }
}
