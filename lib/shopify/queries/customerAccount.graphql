# Customer Account API operations

query CustomerDashboard($ordersFirst: Int = 20, $ordersAfter: String) {
  customer {
    id
    displayName
    emailAddress {
      emailAddress
    }
    addresses {
      id
      firstName
      lastName
      address1
      address2
      city
      province
      provinceCode
      country
      countryCode
      zip
      phone
      isDefault
    }
    orders(first: $ordersFirst, after: $ordersAfter) {
      pageInfo {
        hasNextPage
        endCursor
      }
      nodes {
        id
        name
        orderNumber
        processedAt
        fulfillmentStatus
        currentTotalPriceSet {
          presentmentMoney {
            amount
            currencyCode
          }
        }
        lineItems(first: 10) {
          nodes {
            title
            quantity
          }
        }
      }
    }
  }
}

query CustomerOrders($first: Int!, $after: String) {
  customer {
    orders(first: $first, after: $after) {
      pageInfo {
        hasNextPage
        endCursor
      }
      nodes {
        id
        name
        orderNumber
        processedAt
        fulfillmentStatus
        currentTotalPriceSet {
          presentmentMoney {
            amount
            currencyCode
          }
        }
        lineItems(first: 10) {
          nodes {
            title
            quantity
          }
        }
      }
    }
  }
}

query CustomerAddresses {
  customer {
    id
    addresses {
      id
      firstName
      lastName
      address1
      address2
      city
      province
      provinceCode
      country
      countryCode
      zip
      phone
      isDefault
    }
  }
}

mutation UpdateCustomer($input: CustomerUpdateInput!) {
  customerUpdate(input: $input) {
    customer {
      id
      displayName
    }
    userErrors {
      field
      message
    }
  }
}

mutation CreateAddress($input: CustomerAddressInput!) {
  customerAddressCreate(input: $input) {
    customerAddress {
      id
      firstName
      lastName
      address1
      address2
      city
      province
      provinceCode
      country
      countryCode
      zip
      phone
      isDefault
    }
    userErrors {
      field
      message
    }
  }
}

mutation UpdateAddress($id: ID!, $input: CustomerAddressInput!) {
  customerAddressUpdate(id: $id, input: $input) {
    customerAddress {
      id
      firstName
      lastName
      address1
      address2
      city
      province
      provinceCode
      country
      countryCode
      zip
      phone
      isDefault
    }
    userErrors {
      field
      message
    }
  }
}

mutation DeleteAddress($id: ID!) {
  customerAddressDelete(id: $id) {
    deletedCustomerAddressId
    userErrors {
      field
      message
    }
  }
}
